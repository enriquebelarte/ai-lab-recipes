FROM ?=
VENDOR ?=

REGISTRY ?= quay.io
REGISTRY_ORG ?= ai-lab
IMAGE_NAME ?= $(VENDOR)-bootc
IMAGE_TAG ?= latest
BOOTC_IMAGE ?= ${REGISTRY}/${REGISTRY_ORG}/${IMAGE_NAME}:${IMAGE_TAG}

CONTAINER_TOOL ?= podman
CONTAINER_TOOL_EXTRA_ARGS ?=
EXTRA_RPM_PACKAGES ?=
GRAPH_ROOT=$(shell podman info --format '{{ .Store.GraphRoot }}')
UMASK=$(shell umask)

AUTH_JSON ?=

SOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)

BOOTC_IMAGE_BUILDER ?= quay.io/centos-bootc/bootc-image-builder
IMAGE_BUILDER_CONFIG ?=
IMAGE_BUILDER_EXTRA_ARGS ?=
DISK_TYPE ?= qcow2
DISK_UID ?= $(shell id -u)
DISK_GID ?= $(shell id -g)

ARCH ?=

DRIVER_VERSION ?=
KERNEL_VERSION ?=

INSTRUCTLAB_IMAGE = $(REGISTRY)/$(REGISTRY_ORG)/instructlab-$(VENDOR):$(IMAGE_TAG)
VLLM_IMAGE = $(REGISTRY)/$(REGISTRY_ORG)/vllm:$(IMAGE_TAG)
TRAIN_IMAGE = $(REGISTRY)/$(REGISTRY_ORG)/deepspeed-trainer:$(IMAGE_TAG)
OUTDIR = $(CURDIR)/../build

SSH_PUBKEY ?= $(shell cat ${HOME}/.ssh/id_rsa.pub 2> /dev/null)

.PHONY: prepare-files
prepare-files: $(OUTDIR)

.PHONY: $(OUTDIR)
$(OUTDIR):
	mkdir -p $(OUTDIR)

.PHONY: check-sshkey
check-sshkey:
	@test -n "$(SSH_PUBKEY)" || \
		(echo -n "Error: no ssh key defined! "; \
		 echo "Create ~/.ssh/id_rsa.pub or set SSH_PUBKEY"; exit 1)

.PHONY: push
push:
	podman push "${REGISTRY}/${REGISTRY_ORG}/${IMAGE_NAME}:${IMAGE_TAG}"

.PHONY: check-umask
check-umask:
	@test "$(UMASK)" = "0022" || \
		(echo; echo -n "Error: umask $(UMASK) will cause unexpected behaviour: use umask 022! "; \
		 echo "Verify the `ai-lab-recipes` git repository was cloned with umask 0022"; exit 1)

.PHONY: growfs
growfs: check-umask
	# Add growfs service
	mkdir -p build; cp -pR ../common/usr build

.PHONY: bootc-image-builder
bootc-image-builder:
	mkdir -p build/store
	podman run \
	  $(ARCH:%=--target-arch %) \
	  $(AUTH_JSON:%=-v %:/run/containers/0/auth.json) \
	  $(BOOTC_IMAGE_BUILDER) \
	  $(IMAGE_BUILDER_CONFIG:%=--config /config$(suffix $(IMAGE_BUILDER_CONFIG))) \
	  $(IMAGE_BUILDER_CONFIG:%=-v %:/config$(suffix $(IMAGE_BUILDER_CONFIG))) \
	  ${CONTAINER_TOOL_EXTRA_ARGS} \
	  ${IMAGE_BUILDER_EXTRA_ARGS} \
	  --chown $(DISK_UID):$(DISK_GID) \
	  --local \
	  --privileged \
	  --pull newer \
	  --rm \
	  --type $(DISK_TYPE) \
	  -ti \
	  -v $(GRAPH_ROOT):/var/lib/containers/storage \
	  -v ./build/store:/store \
	  -v ./build:/output \
	  $(BOOTC_IMAGE)

.PHONY: clean
clean:
	rm -rf build

